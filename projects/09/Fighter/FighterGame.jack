// The FigherGame class
class FighterGame{
	field Fighter fighter;
	field int direction;
	
	/** Constructs a new Figher Game. */
	constructor FighterGame new(){
		let fighter = Fighter.new(0,0);
		let direction = 0;
		return this;
	}
	
	/** Disposes this game. */
   method void dispose() {
      do fighter.dispose();
      do Memory.deAlloc(this);
      return;
   }
   
   /** Moves the fighter in the current direction. */
   method void moveFighter() {
      if (direction = 1) { do fighter.moveUp(); }
      if (direction = 2) { do fighter.moveDown(); }
      if (direction = 3) { do fighter.moveLeft(); }
      if (direction = 4) { do fighter.moveRight(); }
      do Sys.wait(5);  // delays the next movement
      return;
   }
   
   /** Runs the game: handles the user's inputs and moves the fighter accordingly */
   method void run() {
      var char key;  // the key currently pressed by the user
      var boolean exit;
      let exit = false;
      
      while (~exit) {
         // waits for a key to be pressed
         while (key = 0) {
            let key = Keyboard.keyPressed();
			let direction = 0;
            do moveFighter();
         }
         if (key = 81)  { let exit = true; }     // q key
         if (key = 131) { let direction = 1; }   // up arrow
         if (key = 133) { let direction = 2; }   // down arrow
         if (key = 130) { let direction = 3; }   // left arrow
         if (key = 132) { let direction = 4; }   // right arrow

         // waits for the key to be released
         while (~(key = 0)) {
            let key = Keyboard.keyPressed();
            do moveFighter();
         }
     } // while
     return;
   }
   
}